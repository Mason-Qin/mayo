---
dataset:
    background_class: {use: false}
    preprocess:
        shape:
            height: 32
            width: 32
            channels: 3
        validate:
            - {type: crop_or_pad}
            # - {type: central_crop, fraction: 0.875}
        final_cpu:
            - {type: standardize_image}
model:
    name: cifarnet_v2
    description: |
        A network model for CIFAR-10 training. Aiming for 90%+ accuracy.
        References::
            http://torch.ch/blog/2015/07/30/cifar.html
            https://arxiv.org/pdf/1702.03044.pdf
    layers:
        _conv: &conv
            type: convolution
            padding: valid
            kernel_size: 3
            weights_initializer: &trunc_norm_init
                type: tensorflow.truncated_normal_initializer
                stddev: 0.05
            normalizer_fn:
                type: tensorflow.contrib.slim.batch_norm
                center: true
                scale: true
                decay: 0.9997
                epsilon: 0.001
            # activation_fn: null
        _pool: &pool
            type: max_pool
            kernel_size: 3
            stride: 2
            padding: valid
        _fc: &fc
            type: fully_connected
            weights_initializer:
                <<: *trunc_norm_init
                stddev: 0.04
            biases_initializer: &bias_init
                type: tensorflow.constant_initializer
                value: 0.1
            weights_regularizer:
                type: tensorflow.contrib.layers.l2_regularizer
                scale: 0.004
        conv0: {<<: *conv, padding: valid, stride: 1, num_outputs: 256}
        conv1: {<<: *conv, num_outputs: 256}
        conv2: {<<: *conv, stride: 2, num_outputs: 256}
        dropout2: {type: dropout, keep_prob: 0.8}
        conv3: {<<: *conv, num_outputs: 256}
        conv4: {<<: *conv, num_outputs: 256}
        conv5: {<<: *conv, stride: 2, num_outputs: 256}
        dropout5: {type: dropout, keep_prob: 0.8}
        conv6: {<<: *conv, kernel_size: 3, num_outputs: 256}
        conv7: {<<: *conv, kernel_size: 2, num_outputs: 256}
        dropout7: {type: dropout, keep_prob: 0.8}
        flatten: {type: flatten}
        logits:
            <<: *fc
            num_outputs: num_classes
            biases_initializer: {type: tensorflow.zeros_initializer}
            weights_initializer:
                {<<: *trunc_norm_init, stddev: !arith 1.0 / 192.0}
            activation_fn: null
    graph:
        from: input
        with: [
            conv0, conv1, conv2, dropout2,
            conv3, conv4, conv5, dropout5,
            conv6, conv7, dropout7,
            flatten, logits]
        to: output

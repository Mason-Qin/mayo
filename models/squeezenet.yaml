---
dataset:
    background_class: {use: false}
    preprocess:
        shape:
            height: 227
            width: 227
            channels: 3
        validate: []
        final:
            - {type: normalize_channels}
model:
    name: squeezenet
    description: |
        This implementation is based on::
          SqueezeNet: AlexNet-level accuracy with 50x fewer parameters and <0.5MB model size
          https://arxiv.org/abs/1602.07360
        We use the following reference models::
          https://github.com/vonclites/squeezenet
          https://github.com/rcmalli/keras-squeezenet
          https://github.com/DeepScale/SqueezeNet/blob/master/SqueezeNet_v1.1/train_val.prototxt
    layers:
        _init: &init
            biases_initializer:
                type: tensorflow.constant_initializer
                value: 0.01
        _conv: &conv
            type: convolution
            padding: same
            # weight_initializer defaults to xavier
            weights_regularizer:
                type: tensorflow.contrib.layers.l2_regularizer
                scale: 0.0005
            <<: *init
        _fc: &fc
            type: fully_connected
            weights_initializer:
                type: tensorflow.truncated_normal_initializer
                stddev: 0.09
            <<: *init
        _fire: &fire
            type: fire_module
            <<: *init
        conv1: {<<: *conv, kernel_size: 7, stride: 2, num_outputs: 96}
        pool1: &pool
            {type: max_pool, kernel_size: 3, stride: 2}
        fire2: {<<: *fire, squeeze_depth: 16, expand_depth: 64}
        fire3: {<<: *fire, squeeze_depth: 16, expand_depth: 64}
        fire4: {<<: *fire, squeeze_depth: 32, expand_depth: 128}
        pool4: &pool
            {type: max_pool, kernel_size: 3, stride: 2}
        fire5: {<<: *fire, squeeze_depth: 32, expand_depth: 128}
        fire6: {<<: *fire, squeeze_depth: 48, expand_depth: 192}
        fire7: {<<: *fire, squeeze_depth: 48, expand_depth: 192}
        fire8: {<<: *fire, squeeze_depth: 64, expand_depth: 256}
        pool8: &pool
            {type: max_pool, kernel_size: 3, stride: 2}
        fire9: {<<: *fire, squeeze_depth: 64, expand_depth: 256}
        dropout9: &dropout {type: dropout, keep_prob: 0.5}
        conv10: {<<: *conv, kernel_size: 1, stride: 1, num_outputs: num_classes}
        pool10: {type: average_pool, kernel_size: 13, stride: 1}
        logits: {type: squeeze, axis: [1, 2]}
    net: [
        conv1, pool1, fire2, fire3, fire4, pool4, fire5, fire6, fire7, fire8,
        pool8, fire9, dropout9, conv10, pool10, logits]

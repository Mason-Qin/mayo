---
dataset:
    background_class: {use: false}
    preprocess:
        shape:
            height: 28
            width: 28
            channels: 1
        validate: null
        final_cpu: {type: linear_map, scale: 2.0, shift: -1.0}
model:
    name: squeeze_lenet
    description: |
          build for testing
    layers:
        _init: &init
            biases_initializer:
                type: tensorflow.constant_initializer
                value: 0.01
        _conv: &conv
            type: convolution
            padding: same
            kernel_size: 1
            stride: 1
            # weight_initializer defaults to xavier
            weights_regularizer:
                type: tensorflow.contrib.layers.l2_regularizer
                scale: 0.0005
            <<: *init
        _fc: &fc
            type: fully_connected
            weights_initializer:
                type: tensorflow.truncated_normal_initializer
                stddev: 0.09
            <<: *init
        _fire: &fire
            type: module
            kwargs: {squeeze_depth: null, expand_depth: null}
            layers:
                squeeze:
                    <<: *conv
                    num_outputs: ^(squeeze_depth)
                expand1: &expand1
                    <<: *conv
                    num_outputs: ^(expand_depth)
                expand3: {<<: *expand1, kernel_size: 3}
                concat:
                    type: concat
                    axis: 3
            graph:
                - {from: input, with: squeeze, to: squeezed}
                - {from: squeezed, with: expand1, to: expanded1}
                - {from: squeezed, with: expand3, to: expanded3}
                - {from: [expanded1, expanded3], with: concat, to: output}
        conv1: {<<: *conv, num_outputs: 20}
        pool1:
          type: max_pool
          kernel_size: 2
          stride: 2
          padding: valid
        conv2: {<<: *conv, num_outputs: 50}
        fire3: {<<: *fire, squeeze_depth: 10, expand_depth: 20}
        fire4: {<<: *fire, squeeze_depth: 10, expand_depth: 20}
        flatten: {type: flatten}
        dropout: {type: dropout, keep_prob: 0.5}
        logits: {<<: *fc, activation_fn: null, num_outputs: num_classes}
    graph:
        from: input
        with:
            [conv1, pool1, conv2,
             fire3, fire4,
             flatten, dropout, logits]
        to: output
